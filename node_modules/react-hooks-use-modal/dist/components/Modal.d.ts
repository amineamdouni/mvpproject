import { Options as FocusTrapOptions } from 'focus-trap';
import React from 'react';
import { ModalProps, OverlayProps, WrapperProps } from '..';
interface ModalWrapperProps<T extends Record<string, unknown>> {
    children: React.ReactNode;
    isOpen: boolean;
    close: () => void;
    elementId: 'root' | string;
    title?: React.ReactNode;
    description?: React.ReactNode;
    preventScroll: boolean;
    focusTrapOptions: FocusTrapOptions;
    components: {
        Wrapper: React.ComponentType<WrapperProps>;
        Overlay: React.ComponentType<OverlayProps>;
        Modal: React.ComponentType<ModalProps<T>>;
    };
    additionalProps?: T;
}
export declare const ModalWrapper: <T extends Record<string, unknown>>({ children, isOpen, close, elementId, title, description, preventScroll, focusTrapOptions, components, additionalProps, }: ModalWrapperProps<T>) => React.ReactElement | null;
export {};
